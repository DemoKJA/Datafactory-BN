{
	"name": "TEST_Grouping_Files_Main",
	"properties": {
		"activities": [
			{
				"name": "Get list of file from container",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_USER",
						"type": "DatasetReference",
						"parameters": {
							"container": "columbus",
							"directoy": "TESTGrouping",
							"filename": "*"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get list of file from container",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ContainerFileArrayLength",
					"value": {
						"value": "@activity('Get list of file from container').output.childItems",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": {
						"value": "@length(json(variables('ContainerFileArrayLength')).value)",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"FileCount": {
				"type": "String",
				"defaultValue": "1"
			},
			"FolderNumber": {
				"type": "String",
				"defaultValue": "1"
			},
			"ContainerFileArrayLength": {
				"type": "Array"
			},
			"GISFolderName": {
				"type": "String",
				"defaultValue": "JustATest"
			},
			"test": {
				"type": "String"
			}
		},
		"annotations": []
	}
}